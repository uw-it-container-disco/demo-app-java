version: '1.0'
steps:

  CheckVersions:
    image: alpine/git:1.0.4
    commands:
    - export CHART_VERSION=$(cat demo-app-java/Chart.yaml | grep -m 1 ^version:| awk '{print $2}')
    - export PUSH_HELM=$(if [[ "$(git log --format='%H' -n 1 -- demo-app-java/Chart.yaml)" == "${{CF_REVISION}}" ]]; then echo "true"; else echo "false"; fi)
    - export DEPLOY_KUBE_NS=$(if [[ "master" == "${{CF_BRANCH_TAG_NORMALIZED}}" ]]; then echo "prod"; else echo "dev"; fi)
    - cf_export CHART_VERSION=$CHART_VERSION PUSH_HELM=$PUSH_HELM DEPLOY_KUBE_NS=$DEPLOY_KUBE_NS
 
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: demo-app-java
    working_directory: ./
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    dockerfile: Dockerfile
  
  PushingToDockerRegistry:
    title: Pushing to Docker Registry
    type: push
    candidate: '${{BuildingDockerImage}}'
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    registry: gcr

  TestChart:
    image: codefresh/cfstep-helm:2.9.1
    commands:
    - helm lint demo-app-java/
    when:
      condition:
        all:
          ChartYamlChanged: '"${{PUSH_HELM}}" == "true"'

  PushChart:
    image: codefresh/cfstep-helm:2.9.1
    environment:
      - ACTION=push
      - CHART_REF=demo-app-java
    when:
      condition:
        all:
          ChartYamlChanged: '"${{PUSH_HELM}}" == "true"'

  Deploy:
    image: codefresh/cfstep-helm:2.9.1
    environment:
    - CHART_VERSION=${{CHART_VERSION}}
    - VALUE_image_tag="${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}"
    - VALUE_image_repository=gcr.io/test-kubernetes-maximede/demo-app-java
    - VALUESFILE_deploy=demo-app-java/values_${{DEPLOY_KUBE_NS}}.yml
    - ACTION=install
    - CHART_REF=demo-app-java
    - KUBE_CONTEXT=container-disco-demo@test-kubernetes-maximede
    - NAMESPACE=${{DEPLOY_KUBE_NS}}
    - RELEASE_NAME=demo-app-java-${{DEPLOY_KUBE_NS}}
    when:
      branch:
        only:
          - master
          - develop
  

